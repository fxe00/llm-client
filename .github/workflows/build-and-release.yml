name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
    
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        include:
          - os: macos-latest
            platform: mac
          - os: ubuntu-latest
            platform: linux
          - os: windows-latest
            platform: win

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: app/package-lock.json

      - name: Set up environment variables (Windows)
        if: matrix.platform == 'win'
        run: |
          echo "ELECTRON_BUILDER_CACHE=/tmp/electron-builder-cache" >> $GITHUB_ENV
          echo "ELECTRON_CACHE=/tmp/electron-cache" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          cd app
          npm ci

      - name: Build application
        run: |
          cd app
          npm run build

      - name: Build Electron app (macOS)
        if: matrix.platform == 'mac'
        run: |
          cd app
          npm run dist:mac
          echo "macOS build completed"
          ls -la release/

      - name: Build Electron app (Linux)
        if: matrix.platform == 'linux'
        run: |
          cd app
          npm run dist:linux
          echo "Linux build completed"
          ls -la release/

      - name: Build Electron app (Windows)
        if: matrix.platform == 'win'
        run: |
          cd app
          set ELECTRON_BUILDER_CACHE=/tmp/electron-builder-cache
          npm run dist:win
          echo "Windows build completed"
          dir release\

      - name: Upload macOS artifacts
        if: matrix.platform == 'mac'
        uses: actions/upload-artifact@v4
        with:
          name: macos-build
          path: app/release/
          retention-days: 1

      - name: Upload Linux artifacts
        if: matrix.platform == 'linux'
        uses: actions/upload-artifact@v4
        with:
          name: linux-build
          path: app/release/
          retention-days: 1

      - name: Upload Windows artifacts
        if: matrix.platform == 'win'
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: app/release/
          retention-days: 1

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: List artifacts for debugging
        run: |
          echo "=== Artifacts directory structure ==="
          find ./artifacts -type f -name "*" | head -20
          echo "=== Artifacts directory listing ==="
          ls -la ./artifacts/
          echo "=== Checking each platform directory ==="
          ls -la ./artifacts/macos-build/ || echo "macOS artifacts not found"
          ls -la ./artifacts/linux-build/ || echo "Linux artifacts not found"
          ls -la ./artifacts/windows-build/ || echo "Windows artifacts not found"

      - name: Check if artifacts exist
        run: |
          if [ ! -d "./artifacts/macos-build" ] && [ ! -d "./artifacts/linux-build" ] && [ ! -d "./artifacts/windows-build" ]; then
            echo "No artifacts found! Exiting..."
            exit 1
          fi
          echo "Artifacts found, proceeding with release..."

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./artifacts/macos-build/*
            ./artifacts/linux-build/*
            ./artifacts/windows-build/*
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
